name: Render CVs to PDF

on:
  # Run this action automatically on push to your main branch
  push:
    branches:
      - main # Or 'master', depending on your repository's default branch
    paths:
      # Only run if the CV data or the HTML template changes
      - 'docs/cv.json'
      - 'docs/cv_de.json'
      - 'docs/index.html'
      - 'docs/langs.json'
      - 'docs/res/icons/**' # Watch for changes to language icons
      - '.github/workflows/render-cv.yml' # Watch for changes to this file
      - 'generate-pdfs.js' # Watch for changes to the script

  # Allows you to run this action manually from the Actions tab
  workflow_dispatch:

jobs:
  build-pdf:
    runs-on: ubuntu-latest # Use a standard Linux runner

    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18' # Use Node.js version 18
          cache: 'npm' # Cache npm packages

      - name: Install dependencies
        # Install Puppeteer (headless browser) and a simple web server
        run: npm install puppeteer http-server

      - name: Create output directory
        # Ensure the target directory exists
        run: mkdir -p docs/outputs/pdf

      - name: Start local server
        # Start the http-server in the background to serve the 'docs' directory
        run: |
          npx http-server ./docs > server.log 2>&1 &
          echo "SERVER_PID=$!" >> $GITHUB_ENV
          
      - name: Wait for server to be ready
        # Give the server a moment to start up
        run: |
          echo "Waiting for server..."
          # We curl the root, which http-server will serve as /index.html from the ./docs dir
          timeout 15s bash -c 'until curl -s http://127.0.0.1:8080 > /dev/null; do echo -n "."; sleep 1; done'
          echo "Server is up!"

      - name: Generate PDFs
        # This is the main step. It runs the Node.js script.
        # It needs the --no-sandbox args to run Puppeteer inside GitHub's container.
        run: node generate-pdfs.js --no-sandbox --disable-setuid-sandbox

      - name: Stop local server
        # Clean up and stop the server
        run: |
          echo "Stopping server (PID: ${{ env.SERVER_PID }})..."
          kill ${{ env.SERVER_PID }}
          
      - name: Commit and push PDFs
        # Use a pre-built action to automatically commit the new files
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: 'Automated: Update CV PDFs'
          # Only commit files in this directory
          file_pattern: 'docs/outputs/pdf/*.pdf'
          commit_user_name: 'github-actions[bot]'
          commit_user_email: 'github-actions[bot]@users.noreply.github.com'
          commit_author: 'github-actions[bot] <github-actions[bot]@users.noreply.github.com>'
