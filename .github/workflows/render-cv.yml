name: Generate and Convert CV Markdown to PDF

on:
  push:
    paths:
      - 'docs/cv.json'
      - 'docs/cv_de.json'
  workflow_dispatch:

jobs:
  generate:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Generate Markdown from JSON
        run: |
          node << 'EOF'
          const fs = require('fs');
          function generateMarkdown(jsonPath, outputPath) {
            const cv = JSON.parse(fs.readFileSync(jsonPath, 'utf8'));
            let md = `# ${cv.name}\n\n`;
            md += `**Location:** ${cv.location}  \n`;
            md += `**Email:** ${cv.contact.email}  \n`;
            md += `**LinkedIn:** [${cv.contact.linkedin}](${cv.contact.linkedin})  \n`;
            md += `**GitHub:** [${cv.contact.github}](${cv.contact.github})  \n\n`;
            md += `## Summary\n\n${cv.summary}\n\n`;
            md += `## Experience\n\n`;
            cv.experience.forEach(exp => {
              md += `### ${exp.title} - ${exp.company}\n\n`;
              md += `**${exp.type}** | ${exp.location} | ${exp.period}\n\n`;
              if (exp.stack) {
                md += `**Tech Stack:** ${exp.stack.join(', ')}\n\n`;
              }
              exp.notes.forEach(note => {
                md += `- ${note}\n`;
              });
              md += `\n`;
            });
            md += `## Tech Stack\n\n`;
            if (cv.techStack) {
              Object.entries(cv.techStack).forEach(([category, items]) => {
                md += `**${category.charAt(0).toUpperCase() + category.slice(1)}:** ${items.join(', ')}\n\n`;
              });
            }
            if (cv.languages) {
              md += `## Languages\n\n`;
              Object.entries(cv.languages).forEach(([lang, level]) => {
                md += `- **${lang.charAt(0).toUpperCase() + lang.slice(1)}:** ${level}\n`;
              });
              md += `\n`;
            }
            fs.writeFileSync(outputPath, md);
            console.log(`Generated ${outputPath}`);
          }
          generateMarkdown('docs/cv.json', 'docs/outputs/cv.md');
          generateMarkdown('docs/cv_de.json', 'docs/outputs/cv_de.md');
          EOF

      - name: Install Pandoc and XeLaTeX
        run: sudo apt-get update && sudo apt-get install -y pandoc texlive-xetex texlive-fonts-recommended texlive-latex-extra

      - name: Convert Markdown to PDF with custom margins
        run: |
          mkdir -p docs/outputs/pdf
          pandoc docs/outputs/cv.md -o docs/outputs/pdf/cv_en.pdf --pdf-engine=xelatex -V geometry:margin=1.5cm
          pandoc docs/outputs/cv_de.md -o docs/outputs/pdf/cv_de.pdf --pdf-engine=xelatex -V geometry:margin=1.5cm

      - name: Commit PDF files
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git add docs/outputs/pdf/*.pdf
          git diff --staged --quiet || git commit -m "Auto-generate CV PDFs"
          git push
